/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  AttestationStation,
  AttestationStationInterface,
} from "../AttestationStation";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "creator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "about",
        type: "address",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "key",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "val",
        type: "bytes",
      },
    ],
    name: "AttestationCreated",
    type: "event",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "about",
            type: "address",
          },
          {
            internalType: "bytes32",
            name: "key",
            type: "bytes32",
          },
          {
            internalType: "bytes",
            name: "val",
            type: "bytes",
          },
        ],
        internalType: "struct AttestationStation.AttestationData[]",
        name: "_attestations",
        type: "tuple[]",
      },
    ],
    name: "attest",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_about",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "_key",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "_val",
        type: "bytes",
      },
    ],
    name: "attest",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "attestations",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "version",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60e060405234801561001057600080fd5b506001608081905260a052600060c05260805160a05160c05161090f61004f60003960006101ad015260006101840152600061015b015261090f6000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c806329b42cb51461005157806354fd4d501461007a5780635eb5ea1014610082578063702b9dee14610097575b600080fd5b61006461005f366004610467565b6100aa565b60405161007191906104fb565b60405180910390f35b610064610154565b610095610090366004610515565b6101f7565b005b6100956100a536600461062d565b61025a565b60006020818152938152604080822085529281528281209093528252902080546100d390610684565b80601f01602080910402602001604051908101604052809291908181526020018280546100ff90610684565b801561014c5780601f106101215761010080835404028352916020019161014c565b820191906000526020600020905b81548152906001019060200180831161012f57829003601f168201915b505050505081565b606061017f7f00000000000000000000000000000000000000000000000000000000000000006102df565b6101a87f00000000000000000000000000000000000000000000000000000000000000006102df565b6101d17f00000000000000000000000000000000000000000000000000000000000000006102df565b6040516020016101e3939291906106be565b604051602081830303815290604052905090565b8060005b8181101561025457600084848381811061021757610217610718565b9050602002810190610229919061072e565b6102329061074e565b905061024b81600001518260200151836040015161025a565b506001016101fb565b50505050565b336000908152602081815260408083206001600160a01b03871684528252808320858452909152902061028d8282610819565b5081836001600160a01b0316336001600160a01b03167f28710dfecab43d1e29e02aa56b2e1e610c0bae19135c9cf7a83a1adb6df96d85846040516102d291906104fb565b60405180910390a4505050565b606060006102ec83610372565b600101905060008167ffffffffffffffff81111561030c5761030c61058a565b6040519080825280601f01601f191660200182016040528015610336576020820181803683370190505b5090508181016020015b600019016f181899199a1a9b1b9c1cb0b131b232b360811b600a86061a8153600a850494508461034057509392505050565b60008072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b83106103b15772184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b830492506040015b6d04ee2d6d415b85acef810000000083106103dd576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc1000083106103fb57662386f26fc10000830492506010015b6305f5e1008310610413576305f5e100830492506008015b612710831061042757612710830492506004015b60648310610439576064830492506002015b600a8310610445576001015b92915050565b80356001600160a01b038116811461046257600080fd5b919050565b60008060006060848603121561047c57600080fd5b6104858461044b565b92506104936020850161044b565b9150604084013590509250925092565b60005b838110156104be5781810151838201526020016104a6565b838111156102545750506000910152565b600081518084526104e78160208601602086016104a3565b601f01601f19169290920160200192915050565b60208152600061050e60208301846104cf565b9392505050565b6000806020838503121561052857600080fd5b823567ffffffffffffffff8082111561054057600080fd5b818501915085601f83011261055457600080fd5b81358181111561056357600080fd5b8660208260051b850101111561057857600080fd5b60209290920196919550909350505050565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126105b157600080fd5b813567ffffffffffffffff808211156105cc576105cc61058a565b604051601f8301601f19908116603f011681019082821181831017156105f4576105f461058a565b8160405283815286602085880101111561060d57600080fd5b836020870160208301376000602085830101528094505050505092915050565b60008060006060848603121561064257600080fd5b61064b8461044b565b925060208401359150604084013567ffffffffffffffff81111561066e57600080fd5b61067a868287016105a0565b9150509250925092565b600181811c9082168061069857607f821691505b6020821081036106b857634e487b7160e01b600052602260045260246000fd5b50919050565b600084516106d08184602089016104a3565b8083019050601760f91b80825285516106f0816001850160208a016104a3565b6001920191820152835161070b8160028401602088016104a3565b0160020195945050505050565b634e487b7160e01b600052603260045260246000fd5b60008235605e1983360301811261074457600080fd5b9190910192915050565b60006060823603121561076057600080fd5b6040516060810167ffffffffffffffff82821081831117156107845761078461058a565b816040526107918561044b565b83526020850135602084015260408501359150808211156107b157600080fd5b506107be368286016105a0565b60408301525092915050565b601f82111561081457600081815260208120601f850160051c810160208610156107f15750805b601f850160051c820191505b81811015610810578281556001016107fd565b5050505b505050565b815167ffffffffffffffff8111156108335761083361058a565b610847816108418454610684565b846107ca565b602080601f83116001811461087c57600084156108645750858301515b600019600386901b1c1916600185901b178555610810565b600085815260208120601f198616915b828110156108ab5788860151825594840194600190910190840161088c565b50858210156108c95787850151600019600388901b60f8161c191681555b5050505050600190811b0190555056fea26469706673582212201e031808c0ddadb95a2431c1e69913033ef834a49fb03351356513f6ae3c6e5f64736f6c634300080f0033";

type AttestationStationConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AttestationStationConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class AttestationStation__factory extends ContractFactory {
  constructor(...args: AttestationStationConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<AttestationStation> {
    return super.deploy(overrides || {}) as Promise<AttestationStation>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): AttestationStation {
    return super.attach(address) as AttestationStation;
  }
  override connect(signer: Signer): AttestationStation__factory {
    return super.connect(signer) as AttestationStation__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AttestationStationInterface {
    return new utils.Interface(_abi) as AttestationStationInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): AttestationStation {
    return new Contract(address, _abi, signerOrProvider) as AttestationStation;
  }
}
